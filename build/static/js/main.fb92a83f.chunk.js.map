{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb92a83f.chunk.js","sourcesContent":["import { PropTypes } from 'prop-types'\n\nconst onClick = (e) => {\n    alert(e)\n}\n\nconst Button = ({color, text, onClick}) => {\n    return <button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\n\n}\n\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n\n}\n\nexport default Button\n","/** @format */\n\nimport { PropTypes } from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className=\"header\">\n      {/* <h1 style={ headingStyle }>{title}</h1> */}\n      <h1>{title}</h1>\n      <Button\n        color={showAdd ? \"red\" : \"green\"}\n        text={showAdd ? \"Close\" : \"Add\"}\n        onClick={onAdd}\n      />\n      {/* <Button color='blue' text='Hello 1' />\n            <Button color='red' text='Hello 2' /> */}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task tracker\",\n};\n\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black'\n// }\n\nexport default Header;\n","/** @format */\n\nimport { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}{\" \"}\n        <FaTimes\n          style={{ color: \"red\", cursor: \"pointer\" }}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","/** @format */\n\nimport { useState } from \"react\";\nimport Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n        <Task key={task.id}\n        task={task}\n        onDelete={onDelete}\n        onToggle={onToggle} />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","/** @format */\n\nimport { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n      e.preventDefault()\n\n      if (!text) {\n        alert('Please add Task')\n        return\n      }\n\n      onAdd({ text, day, reminder})\n\n      setText('')\n      setDay('')\n      setReminder(false)\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"\">Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Taks\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"\">Day & Time</label>\n        <input \n        type=\"text\"\n        placeholder=\"Add Day & Time\"\n        value={day}\n        onChange={(e) => setDay(e.target.value)} />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label htmlFor=\"\">Set Reminder</label>\n        <input \n        type=\"checkbox\" \n        checked={reminder}\n        value={reminder}\n        onChange={(e) => setReminder(e.currentTarget.checked)}/>\n      </div>\n      <input type=\"submit\" value=\"Save Tasks\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","/** @format */\n\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"Feb 6th at 1:30pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Food Shopping\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: false,\n    },\n  ]);\n\n  // Add Tasks\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  // delete tasks\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Task To Show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}